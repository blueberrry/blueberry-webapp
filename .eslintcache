[{"C:\\projects\\go-electric\\src\\features\\steps\\step-5-results\\Step5Results.js":"1","C:\\projects\\go-electric\\src\\global-styles\\GlobalStyles.js":"2","C:\\projects\\go-electric\\src\\components\\index.js":"3","C:\\projects\\go-electric\\src\\components\\text\\Text.js":"4","C:\\projects\\go-electric\\src\\components\\multi-choice\\MultiChoice.js":"5","C:\\projects\\go-electric\\src\\constants\\theme.js":"6","C:\\projects\\go-electric\\src\\components\\list-item\\ListItem.js":"7","C:\\projects\\go-electric\\src\\components\\FormLogger.js":"8","C:\\projects\\go-electric\\src\\utils\\index.js":"9","C:\\projects\\go-electric\\src\\App.js":"10","C:\\projects\\go-electric\\src\\context\\FormValuesContext.js":"11","C:\\projects\\go-electric\\src\\components\\draggable-drawer\\DraggableDrawer.js":"12","C:\\projects\\go-electric\\src\\components\\indicators\\Indicators.js":"13","C:\\projects\\go-electric\\src\\constants\\index.js":"14","C:\\projects\\go-electric\\src\\constants\\colours.js":"15","C:\\projects\\go-electric\\src\\components\\range\\Range.js":"16","C:\\projects\\go-electric\\src\\features\\steps\\step-4\\Step4.js":"17","C:\\projects\\go-electric\\src\\services\\get-json.js":"18","C:\\projects\\go-electric\\src\\components\\detail\\Detail.js":"19","C:\\projects\\go-electric\\src\\features\\steps\\step-form\\StepForm.js":"20","C:\\projects\\go-electric\\src\\components\\actions\\Action.js":"21","C:\\projects\\go-electric\\src\\services\\index.js":"22","C:\\projects\\go-electric\\src\\components\\article-container\\ArticleContainer.js":"23","C:\\projects\\go-electric\\src\\components\\card\\Card.js":"24","C:\\projects\\go-electric\\src\\components\\card-image\\CardImage.js":"25","C:\\projects\\go-electric\\src\\components\\card-header\\CardHeader.js":"26","C:\\projects\\go-electric\\src\\components\\card-main\\CardMain.js":"27","C:\\projects\\go-electric\\src\\components\\card-multi\\CardMulti.js":"28","C:\\projects\\go-electric\\src\\components\\card-footer\\CardFooter.js":"29","C:\\projects\\go-electric\\src\\components\\app-header\\AppHeader.js":"30","C:\\projects\\go-electric\\src\\features\\steps\\step-1\\Step1.js":"31","C:\\projects\\go-electric\\src\\features\\steps\\step-2\\Step2.js":"32","C:\\projects\\go-electric\\src\\features\\steps\\step-3\\Step3.js":"33","C:\\projects\\go-electric\\src\\services\\post-json.js":"34","C:\\projects\\go-electric\\src\\components\\card-switch\\CardSwitch.js":"35","C:\\projects\\go-electric\\src\\components\\image\\Image.js":"36","C:\\projects\\go-electric\\src\\features\\index.js":"37","C:\\projects\\go-electric\\src\\reportWebVitals.js":"38","C:\\projects\\go-electric\\src\\components\\progress-bar\\ProgressBar.js":"39","C:\\projects\\go-electric\\src\\components\\card-range\\CardRange.js":"40","C:\\projects\\go-electric\\src\\constants\\resets.js":"41","C:\\projects\\go-electric\\src\\components\\card-carousel\\CardCarousel.js":"42"},{"size":666,"mtime":1614633732150,"results":"43","hashOfConfig":"44"},{"size":402,"mtime":1611953245697,"results":"45","hashOfConfig":"44"},{"size":1134,"mtime":1614427216970,"results":"46","hashOfConfig":"44"},{"size":3139,"mtime":1614635491461,"results":"47","hashOfConfig":"44"},{"size":1931,"mtime":1613335020338,"results":"48","hashOfConfig":"44"},{"size":2444,"mtime":1614635708835,"results":"49","hashOfConfig":"44"},{"size":9206,"mtime":1614636159934,"results":"50","hashOfConfig":"44"},{"size":2999,"mtime":1611938236483,"results":"51","hashOfConfig":"44"},{"size":466,"mtime":1614446080880,"results":"52","hashOfConfig":"44"},{"size":888,"mtime":1614550425476,"results":"53","hashOfConfig":"44"},{"size":616,"mtime":1611509107458,"results":"54","hashOfConfig":"44"},{"size":870,"mtime":1614633218179,"results":"55","hashOfConfig":"44"},{"size":938,"mtime":1614635568196,"results":"56","hashOfConfig":"44"},{"size":496,"mtime":1614445678499,"results":"57","hashOfConfig":"44"},{"size":590,"mtime":1614634280419,"results":"58","hashOfConfig":"44"},{"size":3147,"mtime":1613942200072,"results":"59","hashOfConfig":"44"},{"size":2044,"mtime":1614608415531,"results":"60","hashOfConfig":"44"},{"size":339,"mtime":1614634499348,"results":"61","hashOfConfig":"44"},{"size":2239,"mtime":1614543527154,"results":"62","hashOfConfig":"44"},{"size":7067,"mtime":1614636094112,"results":"63","hashOfConfig":"44"},{"size":2138,"mtime":1614544426388,"results":"64","hashOfConfig":"44"},{"size":105,"mtime":1614423537608,"results":"65","hashOfConfig":"44"},{"size":463,"mtime":1614546552246,"results":"66","hashOfConfig":"44"},{"size":1357,"mtime":1614636034248,"results":"67","hashOfConfig":"44"},{"size":890,"mtime":1614636081238,"results":"68","hashOfConfig":"44"},{"size":751,"mtime":1614636077920,"results":"69","hashOfConfig":"44"},{"size":700,"mtime":1614549499693,"results":"70","hashOfConfig":"44"},{"size":610,"mtime":1614636084309,"results":"71","hashOfConfig":"44"},{"size":2063,"mtime":1614636071579,"results":"72","hashOfConfig":"44"},{"size":1398,"mtime":1614549123755,"results":"73","hashOfConfig":"44"},{"size":1788,"mtime":1614600985890,"results":"74","hashOfConfig":"44"},{"size":1886,"mtime":1614601027854,"results":"75","hashOfConfig":"44"},{"size":1673,"mtime":1614607981700,"results":"76","hashOfConfig":"44"},{"size":921,"mtime":1613951442605,"results":"77","hashOfConfig":"44"},{"size":550,"mtime":1613332499959,"results":"78","hashOfConfig":"44"},{"size":179,"mtime":1614611889551,"results":"79","hashOfConfig":"44"},{"size":76,"mtime":1614612425581,"results":"80","hashOfConfig":"44"},{"size":362,"mtime":1610294257455,"results":"81","hashOfConfig":"44"},{"size":919,"mtime":1613335652741,"results":"82","hashOfConfig":"44"},{"size":792,"mtime":1613323262079,"results":"83","hashOfConfig":"44"},{"size":841,"mtime":1610915124039,"results":"84","hashOfConfig":"44"},{"size":874,"mtime":1613307890836,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bxsoul",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\go-electric\\src\\features\\steps\\step-5-results\\Step5Results.js",[],"C:\\projects\\go-electric\\src\\global-styles\\GlobalStyles.js",["187"],"C:\\projects\\go-electric\\src\\components\\index.js",[],["188","189"],"C:\\projects\\go-electric\\src\\components\\text\\Text.js",["190"],"C:\\projects\\go-electric\\src\\components\\multi-choice\\MultiChoice.js",["191"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport chargingPoint from '../../assets/images/charging-point.svg';\r\nimport { BREAKPOINTS, COLOURS, SIZES, RESETS } from '../../constants';\r\nimport { Text } from '../../components';\r\n\r\nconst ChoiceButtonStyled = styled.button`\r\n  ${RESETS.btnReset}\r\n  max-width: 100%;\r\n  min-height: 5.625rem;\r\n  border-radius: 0.75rem;\r\n  border: 1px solid ${COLOURS.primary};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  text-align: left;\r\n  margin-bottom: ${SIZES.spacerXXSm}rem;\r\n  @media screen and ${BREAKPOINTS.tablet} {\r\n    margin-bottom: ${SIZES.spacerXSm}rem;\r\n  }\r\n  padding: 0 ${SIZES.spacerXXSm}rem;\r\n  background: ${COLOURS.white};\r\n  ${(props) => props.isActive && `background: ${COLOURS.primary}; color: ${COLOURS.white};`}\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst MultiChoice = ({ choiceSelections, activeId, handleMultiChange }) => {\r\n  return choiceSelections.map((selection, index) => {\r\n    const isActive = activeId === selection.id;\r\n    return (\r\n      <ChoiceButtonStyled\r\n        value={selection.id}\r\n        isActive={isActive}\r\n        onClick={handleMultiChange('chargingLocationId')}\r\n        key={`${selection.id}-blueberry-${index}`}>\r\n        <div style={{ width: '15%' }}>\r\n          <img src={selection.icon} alt='' />\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: `calc(85% - ${SIZES.spacerXXSm}rem`,\r\n            border: '1px solid green;',\r\n            paddingLeft: `${SIZES.spacerXXSm}rem`,\r\n          }}>\r\n          <Text type='h4' colour={isActive ? COLOURS.white : COLOURS.primary}>\r\n            {selection.title}\r\n          </Text>\r\n          <Text type='body' colour={isActive ? COLOURS.white : COLOURS.primary} className='small'>\r\n            {selection.info}\r\n          </Text>\r\n        </div>\r\n      </ChoiceButtonStyled>\r\n    );\r\n  });\r\n};\r\n\r\nexport default MultiChoice;\r\n",["192","193"],"C:\\projects\\go-electric\\src\\constants\\theme.js",[],"C:\\projects\\go-electric\\src\\components\\list-item\\ListItem.js",["194","195","196"],"C:\\projects\\go-electric\\src\\components\\FormLogger.js",["197","198"],"import React, { useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Text from '../components/text/Text';\r\nimport { COLOURS } from '../constants';\r\nimport { FormValuesContext } from '../context/FormValuesContext';\r\n\r\nconst FormLogger = ({\r\n  formStep,\r\n  budgetType,\r\n  budgetMonthly,\r\n  budgetFull,\r\n  milesType,\r\n  milesDaily,\r\n  milesYearly,\r\n  chargingLocation,\r\n}) => {\r\n  const formValuesContext = useContext(FormValuesContext);\r\n  return (\r\n    <>\r\n      <div style={{ marginLeft: '1rem' }}>\r\n        <br />\r\n        <br />\r\n        <Text type='bodyBold' colour={COLOURS.white}>\r\n          Stepper Form Values\r\n        </Text>\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <div style={{ maxWidth: '100%', marginLeft: '1rem', display: 'grid', 'grid-template-columns': 'repeat(4, 1fr)' }}>\r\n        <div>\r\n          {formValuesContext.carType && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Car Type ID: &nbsp; &nbsp; &nbsp; {formValuesContext.carType} &#125;\r\n            </Text>\r\n          )}\r\n          <br />\r\n          {formValuesContext.carType && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Current Slide Index: &nbsp; &nbsp; &nbsp; {formValuesContext.currentSlide} &#125;\r\n            </Text>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {budgetType && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Budget Type: &nbsp; &nbsp; &nbsp; {budgetType} &#125;\r\n            </Text>\r\n          )}\r\n          <br />\r\n          {budgetMonthly && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Budget Monthly: &nbsp; &nbsp; &nbsp; £{budgetMonthly} &#125;\r\n            </Text>\r\n          )}\r\n          <br />\r\n          {budgetFull && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Budget Full: &nbsp; &nbsp; &nbsp; £{budgetFull} &#125;\r\n            </Text>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {milesType && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Miles Type: &nbsp; &nbsp; &nbsp; {milesType} &#125;\r\n            </Text>\r\n          )}\r\n          <br />\r\n          {milesDaily && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Miles Daily: &nbsp; &nbsp; &nbsp; {milesDaily} &#125;\r\n            </Text>\r\n          )}\r\n          <br />\r\n          {milesYearly && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Miles Yearly: &nbsp; &nbsp; &nbsp; {milesYearly} &#125;\r\n            </Text>\r\n          )}\r\n        </div>\r\n        <div>\r\n          {chargingLocation && (\r\n            <Text type='bodyBold' colour={COLOURS.white}>\r\n              &#123; Charging Location: &nbsp; &nbsp; &nbsp; {chargingLocation} &#125;\r\n            </Text>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormLogger;\r\n",["199","200"],"C:\\projects\\go-electric\\src\\utils\\index.js",[],["201","202"],"C:\\projects\\go-electric\\src\\App.js",[],["203","204"],"C:\\projects\\go-electric\\src\\context\\FormValuesContext.js",[],"C:\\projects\\go-electric\\src\\components\\draggable-drawer\\DraggableDrawer.js",[],"C:\\projects\\go-electric\\src\\components\\indicators\\Indicators.js",["205","206","207"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Text from '../text/Text';\r\nimport Image from '../image/Image';\r\nimport { BREAKPOINTS, COLOURS, SIZES, RESETS } from '../../constants';\r\nimport { Badge } from '../list-item/ListItem';\r\nimport TempBenchmarkSrc from '../../assets/images/listing-images/_default-benchmark.png';\r\n\r\nconst IndicatorsStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Indicators = ({ title, score, info }) => {\r\n  return (\r\n    <IndicatorsStyled>\r\n      <Badge colour={COLOURS.lighterGray}>\r\n        <Text type='h5' colour={COLOURS.primary}>\r\n          {title}\r\n        </Text>\r\n      </Badge>\r\n      <Image src={TempBenchmarkSrc} />\r\n      <Text type='bodySemiBold' colour={COLOURS.primary} className='small'>\r\n        {info}\r\n      </Text>\r\n    </IndicatorsStyled>\r\n  );\r\n};\r\n\r\nexport default Indicators;\r\n","C:\\projects\\go-electric\\src\\constants\\index.js",[],["208","209"],"C:\\projects\\go-electric\\src\\constants\\colours.js",[],"C:\\projects\\go-electric\\src\\components\\range\\Range.js",["210","211"],"import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport InputRange from 'react-input-range';\r\nimport 'react-input-range/lib/css/index.css';\r\nimport { BREAKPOINTS, RANGE, SIZES, COLOURS, DROP_SHADOW } from '../../constants';\r\nimport { Text } from '../../components';\r\nconst RangeContainer = styled.div`\r\n  width: 240px;\r\n  @media screen and ${BREAKPOINTS.tablet} {\r\n    width: 300px;\r\n  }\r\n  > div.step-labels {\r\n    width: 115%;\r\n    margin-left: -1rem;\r\n  }\r\n\r\n  > div.input-range {\r\n    > div.input-range__track {\r\n      height: 0.5rem;\r\n      border-radius: 1rem;\r\n      @media screen and ${BREAKPOINTS.tablet} {\r\n        height: 0.75rem;\r\n      }\r\n      background: ${COLOURS.lightGray};\r\n      > .input-range__track--active {\r\n        height: 0.5rem;\r\n        background: ${COLOURS.primary};\r\n        border-radius: 1rem;\r\n        @media screen and ${BREAKPOINTS.tablet} {\r\n          height: 0.75rem;\r\n        }\r\n      }\r\n      > span.input-range__slider-container {\r\n        ${DROP_SHADOW}\r\n        background: ${COLOURS.primary};\r\n        > div.input-range__slider {\r\n          background: ${COLOURS.primary};\r\n          border: ${COLOURS.primary};\r\n          width: 2rem;\r\n          height: 2rem;\r\n          margin-left: -0.95rem;\r\n          margin-top: -1.15rem;\r\n          @media screen and ${BREAKPOINTS.tablet} {\r\n            margin-top: -1.25rem;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .input-range__label--value,\r\n  .input-range__label-container {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StepLabels = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 0.65rem;\r\n`;\r\n\r\nconst Range = ({ steps, value, handleRangeChange, labelSymbol }) => {\r\n  const initialRange = 6;\r\n  const [rangeValue, setRangeValue] = useState(value === 'skipped' ? initialRange : value);\r\n  //const [rangeValue, setRangeValue] = useState(initialRange);\r\n\r\n  useEffect(() => {\r\n    value === 'skipped' && handleRangeChange(initialRange);\r\n  }, [value, handleRangeChange]);\r\n\r\n  /*steps: {\r\n    2: 200,\r\n    4: 400,\r\n    6: 600,\r\n    8: 800,\r\n    10: 3000,\r\n  },*/\r\n  const labels = Object.keys(steps).map((step) => (\r\n    <Text\r\n      colour={COLOURS.primary}\r\n      className={\r\n        value === JSON.parse(step) ? 'step-label--active' : 'step-label--inactive'\r\n      }>{`${labelSymbol}${steps[step]}`}</Text>\r\n  ));\r\n  return (\r\n    <RangeContainer className='range-container'>\r\n      <InputRange\r\n        minValue={RANGE.min}\r\n        maxValue={RANGE.max}\r\n        formatLabel={(value) => `${labelSymbol}${steps[value]}`}\r\n        value={rangeValue}\r\n        onChange={(value) => setTimeout(() => setRangeValue(value), 50)}\r\n        onChangeComplete={() => setTimeout(() => handleRangeChange(rangeValue), 50)}\r\n        step={2}\r\n        draggableTrack={false}\r\n      />\r\n      <StepLabels className='step-labels'>{labels}</StepLabels>\r\n    </RangeContainer>\r\n  );\r\n};\r\n\r\nexport default Range;\r\n\r\nRange.defaultProps = {\r\n  labelSymbol: '',\r\n};\r\n\r\nRange.propTypes = {\r\n  labelSymbol: PropTypes.string,\r\n};\r\n","C:\\projects\\go-electric\\src\\features\\steps\\step-4\\Step4.js",["212","213","214"],"import React from 'react';\r\n//import chargingPoint from '../../../assets/images/charging-point.svg';\r\nimport carBattery from '../../../assets/images/svgs/car-battery.svg';\r\nimport home from '../../../assets/images/svgs/home.svg';\r\nimport roadSideCharging from '../../../assets/images/svgs/road-side-charging.svg';\r\nimport appChargingPoints from '../../../assets/images/svgs/app-charging-points.svg';\r\nimport {\r\n  Action,\r\n  CardImage,\r\n  CardHeader,\r\n  CardRange,\r\n  CardSwitch,\r\n  CardMain,\r\n  CardFooter,\r\n  CardMulti,\r\n} from '../../../components';\r\n\r\nconst Step4 = ({ decrementFormStep, incrementFormStep, postData, skip, step, activeId, handleChange }) => {\r\n  // const ChargingTimeRange = () => {\r\n  //   return (\r\n  //     <CardRange\r\n  //       rangeTitle={`Around ${milesDaily} per day`}\r\n  //       steps={milesDailySteps}\r\n  //       handleRangeChange={handleChange('milesDailyId')}\r\n  //       rangeValue={milesDailyId}\r\n  //     />\r\n  //   );\r\n  // };\r\n  // const switchItems = ['daily', 'yearly'];\r\n\r\n  const choiceSelections = [\r\n    { icon: home, title: 'Home', info: 'Using your own charger \\n (We assume this is A.C. type)', id: 1 },\r\n    {\r\n      icon: roadSideCharging,\r\n      title: 'Local public charging point',\r\n      info: 'Using a charging point close to your home',\r\n      id: 2,\r\n    },\r\n    {\r\n      icon: appChargingPoints,\r\n      title: 'Charging points during trips',\r\n      info: 'Using a range of public charging points on the go',\r\n      id: 3,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <CardHeader headerText='Where will you usually re-charge your car?' />\r\n      <CardImage src={carBattery} alt='Bolt of electricity' />\r\n      <CardMain>\r\n        <CardMulti choiceSelections={choiceSelections} activeId={activeId} handleMultiChange={handleChange} />\r\n      </CardMain>\r\n      <CardFooter\r\n        decrementFormStep={decrementFormStep}\r\n        incrementFormStep={incrementFormStep}\r\n        postData={postData}\r\n        skip={skip}\r\n        step={step}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Step4;\r\n",["215","216"],"C:\\projects\\go-electric\\src\\services\\get-json.js",[],"C:\\projects\\go-electric\\src\\components\\detail\\Detail.js",[],"C:\\projects\\go-electric\\src\\features\\steps\\step-form\\StepForm.js",["217","218","219","220","221"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FormValuesContext } from '../../../context/FormValuesContext';\r\nimport FormLogger from '../../../components/FormLogger';\r\nimport Step1 from '../step-1/Step1';\r\nimport Step2 from '../step-2/Step2';\r\nimport Step3 from '../step-3/Step3';\r\nimport Step4 from '../step-4/Step4';\r\nimport Step5Results from '../step-5-results/Step5Results';\r\nimport { BREAKPOINTS, COLOURS, SIZES } from '../../../constants';\r\nimport { Card, FONTS, Text, ProgressBar } from '../../../components';\r\nimport { postJSON, getJSON } from '../../../services/';\r\n\r\nconst StepFormStyled = styled.form`\r\n  // max-width: 1000px;\r\n  min-height: inherit;\r\n  height: inherit;\r\n  max-height: inherit;\r\n  // display: grid;\r\n  // grid-template-columns: 1fr;\r\n  // align-content: space-between;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  @media screen and ${BREAKPOINTS.tablet} {\r\n    display: grid;\r\n    align-content: space-between;\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  border-radius: ${SIZES.crdBrRd}rem;\r\n`;\r\n\r\nconst StepFormHeaderStyled = styled.div`\r\n  margin: ${SIZES.spacerSm}rem ${SIZES.spacerXSm}rem;\r\n  > .progress-bar {\r\n    margin-top: ${SIZES.spacerXSm}rem;\r\n  }\r\n`;\r\n\r\nconst StepForm = () => {\r\n  const [form, setForm] = useState({\r\n    step: 1,\r\n    budgetType: 'monthly',\r\n    budgetMonthlyId: 6,\r\n    budgetFullId: 6,\r\n    milesType: 'daily',\r\n    milesDailyId: 6,\r\n    milesYearlyId: 6,\r\n    // chargingTime: 10,\r\n    chargingLocationId: 1,\r\n  });\r\n\r\n  const [carTypes, setCarTypes] = useState(null);\r\n  useEffect(() => {\r\n    getJSON('https://neev.uk/api/cardata').then((response) => {\r\n      setCarTypes(response);\r\n    });\r\n  }, []);\r\n\r\n  // carTypes && console.log('carTypes', JSON.stringify(carTypes, null, 2));\r\n\r\n  const [carResults, setCarResults] = useState(null);\r\n  // carResults && console.log('carTypes', JSON.stringify(carResults, null, 2));\r\n\r\n  const nextStep = () => {\r\n    setForm({\r\n      ...form,\r\n      step: form.step + 1,\r\n    });\r\n  };\r\n\r\n  const prevStep = () => {\r\n    setForm({\r\n      ...form,\r\n      step: form.step - 1,\r\n    });\r\n  };\r\n\r\n  const skipStep = (skipped1, skipped2) => {\r\n    setForm({\r\n      ...form,\r\n      step: form.step + 1,\r\n      [skipped1]: 'skipped',\r\n      [skipped2]: 'skipped',\r\n    });\r\n  };\r\n\r\n  const handleChange = (input) => (e) => {\r\n    if (e.currentTarget) e.preventDefault();\r\n    setForm({\r\n      ...form,\r\n      [input]: e.target ? e.target.value || e.currentTarget.value : e,\r\n    });\r\n  };\r\n\r\n  const tempSelectedCarTypes = ['large', 'standard', 'personal'];\r\n\r\n  const postData = (e) => {\r\n    e.preventDefault();\r\n    nextStep();\r\n    return postJSON(\r\n      tempSelectedCarTypes, //carTypes\r\n      form.budgetMonthlyId || form.budgetFullId, // price\r\n      form.milesDailyId || form.milesYearlyId, // range\r\n      form.chargingLocationId // chargetime -- home: 2, local: 5, trips: 10\r\n    ).then((response) => setCarResults(response.results));\r\n  };\r\n\r\n  const RANGE_VALUES = {\r\n    budgetMonthly: {\r\n      2: '250',\r\n      4: '450',\r\n      6: '650',\r\n      8: '850',\r\n      10: '1000+',\r\n    },\r\n    budgetFull: {\r\n      2: '25k',\r\n      4: '45k',\r\n      6: '65k',\r\n      8: '85k',\r\n      10: '100k+',\r\n    },\r\n    milesDaily: {\r\n      2: 10,\r\n      4: 30,\r\n      6: 50,\r\n      8: 70,\r\n      10: 100,\r\n    },\r\n    milesYearly: {\r\n      2: 2000,\r\n      4: 6000,\r\n      6: 10000,\r\n      8: 14000,\r\n      10: 18000,\r\n    },\r\n  }; //constants\r\n\r\n  const CHARGING_LOCATION = {\r\n    1: 'Home',\r\n    2: 'Local public charging point',\r\n    3: 'Charging points during trips',\r\n  };\r\n\r\n  const lastStep = 5;\r\n  const isLastStep = form.step === lastStep;\r\n\r\n  const CurrentStep = ({ step }) => {\r\n    switch (step) {\r\n      case 1:\r\n        return <Step1 decrementFormStep={prevStep} incrementFormStep={nextStep} skip={skipStep} step={step} />;\r\n      case 2:\r\n        return (\r\n          <Step2\r\n            decrementFormStep={prevStep}\r\n            incrementFormStep={nextStep}\r\n            handleChange={handleChange}\r\n            skip={skipStep}\r\n            step={step}\r\n            budgetType={form.budgetType}\r\n            budgetMonthlySteps={RANGE_VALUES.budgetMonthly}\r\n            budgetMonthlyId={form.budgetMonthlyId}\r\n            budgetMonthly={RANGE_VALUES.budgetMonthly[form.budgetMonthlyId]}\r\n            budgetFullSteps={RANGE_VALUES.budgetFull}\r\n            budgetFullId={form.budgetFullId}\r\n            budgetFull={RANGE_VALUES.budgetFull[form.budgetFullId]}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Step3\r\n            decrementFormStep={prevStep}\r\n            incrementFormStep={nextStep}\r\n            skip={skipStep}\r\n            step={step}\r\n            handleChange={handleChange}\r\n            milesType={form.milesType}\r\n            milesDailySteps={RANGE_VALUES.milesDaily}\r\n            milesDailyId={form.milesDailyId}\r\n            milesDaily={RANGE_VALUES.milesDaily[form.milesDailyId]}\r\n            milesYearlySteps={RANGE_VALUES.milesYearly}\r\n            milesYearlyId={form.milesYearlyId}\r\n            milesYearly={RANGE_VALUES.milesYearly[form.milesYearlyId]}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Step4\r\n            decrementFormStep={prevStep}\r\n            incrementFormStep={nextStep}\r\n            postData={postData}\r\n            skip={skipStep}\r\n            step={step}\r\n            handleChange={handleChange}\r\n            activeId={JSON.parse(form.chargingLocationId)}\r\n          />\r\n        );\r\n      case lastStep:\r\n        return <Step5Results carTypes={carTypes} carResults={carResults} />;\r\n      default:\r\n        return <p>Something went wrong</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StepFormHeaderStyled isLastStep={isLastStep}>\r\n        <Text type='h1' colour={COLOURS.white} className='article-header'>\r\n          {!isLastStep ? `Question ${form.step} of 4` : `Your top car matches`}\r\n        </Text>\r\n        {!isLastStep ? <ProgressBar /> : <p>Change answers/order by matches</p>}\r\n      </StepFormHeaderStyled>\r\n      <Card resultsPage={!isLastStep ? false : true}>\r\n        <StepFormStyled>\r\n          <CurrentStep step={form.step} />\r\n        </StepFormStyled>\r\n      </Card>\r\n      {/* <FormLogger\r\n        formStep={form.step}\r\n        budgetType={form.budgetType}\r\n        budgetMonthly={\r\n          form.budgetMonthlyId === 'skipped' ? 'Not set' : RANGE_VALUES.budgetMonthly[form.budgetMonthlyId]\r\n        }\r\n        budgetFull={form.budgetFullId === 'skipped' ? 'Not set' : RANGE_VALUES.budgetFull[form.budgetFullId]}\r\n        milesType={form.milesType}\r\n        milesDaily={form.milesDailyId === 'skipped' ? 'Not set' : RANGE_VALUES.milesDaily[form.milesDailyId]}\r\n        milesYearly={form.milesYearlyId === 'skipped' ? 'Not set' : RANGE_VALUES.milesYearly[form.milesYearlyId]}\r\n        chargingLocation={CHARGING_LOCATION[form.chargingLocationId]}\r\n      /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepForm;\r\n","C:\\projects\\go-electric\\src\\components\\actions\\Action.js",["222","223"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { COLOURS, SIZES, STYLED, RESETS, BREAKPOINTS } from '../../constants';\r\nimport { Text } from '../text/Text';\r\n\r\nconst Action = styled.button`\r\n  ${RESETS.btnReset}\r\n  background-color: ${(props) => props.styles.bg};\r\n  padding: ${(props) => props.styles.pd};\r\n  @media screen and ${BREAKPOINTS.tablet} {\r\n    padding: ${(props) => props.styles.pdLg};\r\n  }\r\n  border-radius: ${(props) => (props.fullWidth ? 0 : `${SIZES.btnBrRd}rem`)};\r\n  ${(props) => props.fullWidth && 'width: 100%'}\r\n`;\r\n\r\nconst Button = ({ handleClick, children, primary, secondary, modest, modalPrimary, fullWidth }) => {\r\n  let buttonStyles = {};\r\n  if (primary) {\r\n    buttonStyles = {\r\n      bg: COLOURS.primary,\r\n      pd: `${SIZES.btnPdYLg}rem ${SIZES.btnPdXLg}rem`,\r\n      ...buttonStyles,\r\n    };\r\n  }\r\n  if (secondary) {\r\n    buttonStyles = {\r\n      bg: COLOURS.primary,\r\n      pd: `${SIZES.btnPdYSm}rem ${SIZES.btnPdXXSm}rem`,\r\n      pdLg: `${SIZES.btnPdYSm}rem ${SIZES.btnPdXSm}rem`,\r\n      ...buttonStyles,\r\n    };\r\n  }\r\n  if (modest) {\r\n    buttonStyles = {\r\n      bg: COLOURS.white,\r\n      pd: `${SIZES.btnPdYSm}rem ${SIZES.btnPdXXSm}rem`,\r\n      pdLg: `${SIZES.btnPdYSm}rem ${SIZES.btnPdXSm}rem`,\r\n      ...buttonStyles,\r\n    };\r\n  }\r\n  if (fullWidth) {\r\n    buttonStyles = {\r\n      bg: COLOURS.secondary,\r\n      pd: `${SIZES.btnPdYLg}rem ${SIZES.btnPdXLg}rem`,\r\n      ...buttonStyles,\r\n    };\r\n  }\r\n\r\n  if (modalPrimary) {\r\n    buttonStyles = {\r\n      bg: COLOURS.secondary,\r\n      pd: `${SIZES.btnPdYSm}rem ${SIZES.btnPdXXSm}rem`,\r\n      ...buttonStyles,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Action onClick={handleClick} styles={buttonStyles} fullWidth={fullWidth}>\r\n      {children}\r\n    </Action>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  text: '',\r\n  handleClick: () => {},\r\n  primary: false,\r\n  secondary: false,\r\n  propStyles: {},\r\n};\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n  primary: PropTypes.bool,\r\n  secondary: PropTypes.bool,\r\n  propStyles: PropTypes.object,\r\n};\r\n","C:\\projects\\go-electric\\src\\services\\index.js",[],"C:\\projects\\go-electric\\src\\components\\article-container\\ArticleContainer.js",[],"C:\\projects\\go-electric\\src\\components\\card\\Card.js",["224","225"],"C:\\projects\\go-electric\\src\\components\\card-image\\CardImage.js",[],"C:\\projects\\go-electric\\src\\components\\card-header\\CardHeader.js",["226"],"C:\\projects\\go-electric\\src\\components\\card-main\\CardMain.js",["227","228"],"import styled from 'styled-components';\r\nimport { BREAKPOINTS, STEP_GRID, SIZES } from '../../constants';\r\nimport CardSwitch from '../card-switch/CardSwitch';\r\nimport CardRange from '../card-range/CardRange';\r\n\r\nconst CardMainStyled = styled.section`\r\n  ${STEP_GRID.fullWidth};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  // margin: ${SIZES.spacerXSm}rem;\r\n  margin: 0;\r\n  padding: 0 ${SIZES.spacerXSm}rem;\r\n  @media screen and ${BREAKPOINTS.tablet} {\r\n    ${STEP_GRID.rhs}\r\n    margin: ${SIZES.spacerLg}rem;\r\n  }\r\n`;\r\nconst CardMain = ({ children }) => {\r\n  return <CardMainStyled>{children}</CardMainStyled>;\r\n};\r\n\r\nexport default CardMain;\r\n","C:\\projects\\go-electric\\src\\components\\card-multi\\CardMulti.js",["229"],"C:\\projects\\go-electric\\src\\components\\card-footer\\CardFooter.js",["230"],"C:\\projects\\go-electric\\src\\components\\app-header\\AppHeader.js",[],"C:\\projects\\go-electric\\src\\features\\steps\\step-1\\Step1.js",[],"C:\\projects\\go-electric\\src\\features\\steps\\step-2\\Step2.js",[],"C:\\projects\\go-electric\\src\\features\\steps\\step-3\\Step3.js",[],"C:\\projects\\go-electric\\src\\services\\post-json.js",["231"],"const status = (response) => {\r\n  debugger;\r\n  if (response.ok) return response;\r\n  var error = new Error(response.statusText || response.status);\r\n  error.response = response;\r\n  console.log(error);\r\n  throw error;\r\n};\r\n\r\nconst json = (response) => response.json();\r\n\r\nconst postJSON = (carTypes, price, range, chargeTime, power = 5, speed = 5) => {\r\n  // debugger;\r\n  const apiRoot = 'https://neev.uk/api'; // constants\r\n  const defaultCars = { large: 'SUV', standard: 'Saloon', personal: 'Hatchback' }; //constants\r\n  const cars = carTypes.map((car) => defaultCars[car]).join(',');\r\n\r\n  const defaultQs = `https://neev.uk/api?range=4&chargetime=3&power=4&speed=2&price=3&carType=Saloon,Hatchback`; // constants\r\n  const qs = `${apiRoot}?range=${range}&chargetime=${chargeTime}&power=${power}&speed=${speed}&price=${price}&carType=${cars}`;\r\n  return fetch(qs).then(status).then(json);\r\n};\r\n\r\nexport default postJSON;\r\n","C:\\projects\\go-electric\\src\\components\\card-switch\\CardSwitch.js",["232","233"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BREAKPOINTS, COLOURS, SIZES } from '../../constants';\r\nimport Switch from '../switch/Switch';\r\n\r\nconst CardSwitchStyled = styled.section`\r\n  margin-bottom: ${SIZES.spacerMd}rem;\r\n`;\r\n\r\nconst CardSwitch = ({ switchItems, checkedItem, handleSwitchChange }) => {\r\n  return (\r\n    <CardSwitchStyled>\r\n      <Switch switchItems={switchItems} checkedItem={checkedItem} handleSwitchChange={handleSwitchChange} />\r\n    </CardSwitchStyled>\r\n  );\r\n};\r\n\r\nexport default CardSwitch;\r\n","C:\\projects\\go-electric\\src\\components\\image\\Image.js",[],"C:\\projects\\go-electric\\src\\features\\index.js",[],"C:\\projects\\go-electric\\src\\reportWebVitals.js",[],"C:\\projects\\go-electric\\src\\components\\progress-bar\\ProgressBar.js",[],"C:\\projects\\go-electric\\src\\components\\card-range\\CardRange.js",["234","235"],"C:\\projects\\go-electric\\src\\constants\\resets.js",[],"C:\\projects\\go-electric\\src\\components\\card-carousel\\CardCarousel.js",["236","237","238","239"],{"ruleId":"240","severity":1,"message":"241","line":2,"column":26,"nodeType":"242","messageId":"243","endLine":2,"endColumn":32},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"240","severity":1,"message":"248","line":3,"column":18,"nodeType":"242","messageId":"243","endLine":3,"endColumn":21},{"ruleId":"240","severity":1,"message":"249","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":21},{"ruleId":"244","replacedBy":"250"},{"ruleId":"246","replacedBy":"251"},{"ruleId":"240","severity":1,"message":"252","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":17},{"ruleId":"240","severity":1,"message":"253","line":11,"column":8,"nodeType":"242","messageId":"243","endLine":11,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":13,"column":39,"nodeType":"242","messageId":"243","endLine":13,"endColumn":45},{"ruleId":"240","severity":1,"message":"254","line":1,"column":29,"nodeType":"242","messageId":"243","endLine":1,"endColumn":37},{"ruleId":"240","severity":1,"message":"255","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":14},{"ruleId":"244","replacedBy":"256"},{"ruleId":"246","replacedBy":"257"},{"ruleId":"244","replacedBy":"258"},{"ruleId":"246","replacedBy":"259"},{"ruleId":"244","replacedBy":"260"},{"ruleId":"246","replacedBy":"261"},{"ruleId":"240","severity":1,"message":"262","line":5,"column":10,"nodeType":"242","messageId":"243","endLine":5,"endColumn":21},{"ruleId":"240","severity":1,"message":"263","line":5,"column":32,"nodeType":"242","messageId":"243","endLine":5,"endColumn":37},{"ruleId":"240","severity":1,"message":"241","line":5,"column":39,"nodeType":"242","messageId":"243","endLine":5,"endColumn":45},{"ruleId":"244","replacedBy":"264"},{"ruleId":"246","replacedBy":"265"},{"ruleId":"240","severity":1,"message":"266","line":2,"column":8,"nodeType":"242","messageId":"243","endLine":2,"endColumn":16},{"ruleId":"240","severity":1,"message":"263","line":7,"column":30,"nodeType":"242","messageId":"243","endLine":7,"endColumn":35},{"ruleId":"240","severity":1,"message":"267","line":8,"column":3,"nodeType":"242","messageId":"243","endLine":8,"endColumn":9},{"ruleId":"240","severity":1,"message":"268","line":11,"column":3,"nodeType":"242","messageId":"243","endLine":11,"endColumn":12},{"ruleId":"240","severity":1,"message":"269","line":12,"column":3,"nodeType":"242","messageId":"243","endLine":12,"endColumn":13},{"ruleId":"244","replacedBy":"270"},{"ruleId":"246","replacedBy":"271"},{"ruleId":"240","severity":1,"message":"272","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":27},{"ruleId":"240","severity":1,"message":"273","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":27},{"ruleId":"240","severity":1,"message":"274","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":18},{"ruleId":"240","severity":1,"message":"275","line":11,"column":16,"nodeType":"242","messageId":"243","endLine":11,"endColumn":21},{"ruleId":"240","severity":1,"message":"276","line":141,"column":9,"nodeType":"242","messageId":"243","endLine":141,"endColumn":26},{"ruleId":"240","severity":1,"message":"277","line":4,"column":26,"nodeType":"242","messageId":"243","endLine":4,"endColumn":32},{"ruleId":"240","severity":1,"message":"278","line":5,"column":10,"nodeType":"242","messageId":"243","endLine":5,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":4,"column":39,"nodeType":"242","messageId":"243","endLine":4,"endColumn":45},{"ruleId":"240","severity":1,"message":"278","line":5,"column":10,"nodeType":"242","messageId":"243","endLine":5,"endColumn":14},{"ruleId":"240","severity":1,"message":"279","line":4,"column":32,"nodeType":"242","messageId":"243","endLine":4,"endColumn":39},{"ruleId":"240","severity":1,"message":"269","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":18},{"ruleId":"240","severity":1,"message":"268","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":17},{"ruleId":"240","severity":1,"message":"280","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"279","line":5,"column":32,"nodeType":"242","messageId":"243","endLine":5,"endColumn":39},{"ruleId":"240","severity":1,"message":"281","line":18,"column":9,"nodeType":"242","messageId":"243","endLine":18,"endColumn":18},{"ruleId":"240","severity":1,"message":"262","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":21},{"ruleId":"240","severity":1,"message":"282","line":3,"column":23,"nodeType":"242","messageId":"243","endLine":3,"endColumn":30},{"ruleId":"240","severity":1,"message":"283","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":18},{"ruleId":"240","severity":1,"message":"262","line":6,"column":10,"nodeType":"242","messageId":"243","endLine":6,"endColumn":21},{"ruleId":"240","severity":1,"message":"272","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":27},{"ruleId":"240","severity":1,"message":"254","line":1,"column":29,"nodeType":"242","messageId":"243","endLine":1,"endColumn":37},{"ruleId":"240","severity":1,"message":"284","line":1,"column":39,"nodeType":"242","messageId":"243","endLine":1,"endColumn":48},{"ruleId":"240","severity":1,"message":"285","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":25},"no-unused-vars","'RESETS' is defined but never used.","Identifier","unusedVar","no-native-reassign",["286"],"no-negated-in-lhs",["287"],"'css' is defined but never used.","'chargingPoint' is defined but never used.",["286"],["287"],"'PropTypes' is defined but never used.","'TempImage' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.",["286"],["287"],["286"],["287"],["286"],["287"],"'BREAKPOINTS' is defined but never used.","'SIZES' is defined but never used.",["286"],["287"],"'ReactDOM' is defined but never used.","'Action' is defined but never used.","'CardRange' is defined but never used.","'CardSwitch' is defined but never used.",["286"],["287"],"'useContext' is defined but never used.","'FormValuesContext' is defined but never used.","'FormLogger' is defined but never used.","'FONTS' is defined but never used.","'CHARGING_LOCATION' is assigned a value but never used.","'STYLED' is defined but never used.","'Text' is defined but never used.","'OFFSETS' is defined but never used.","'Image' is defined but never used.","'defaultQs' is assigned a value but never used.","'COLOURS' is defined but never used.","'classNames' is defined but never used.","'useEffect' is defined but never used.","'CarouselContext' is defined but never used.","no-global-assign","no-unsafe-negation"]